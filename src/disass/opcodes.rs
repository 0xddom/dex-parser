const Nop: usize = 0x00;
const Move: usize = 0x01;
const MoveFrom16: usize = 0x02;
const Move16: usize = 0x03;
const MoveWide: usize = 0x04;
const MoveWideFrom16: usize = 0x05;
const MoveWide16: usize = 0x06;
const MoveObject: usize = 0x07;
const MoveObjectFrom16: usize = 0x08;
const MoveObject16: usize = 0x09;
const MoveResult: usize = 0x0a;
const MoveResultWide: usize = 0x0b;
const MoveResultObject: usize = 0x0c;
const MoveException: usize = 0x0d;
const ReturnVoid: usize = 0x0e;
const Return: usize = 0x0f;
const ReturnWide: usize = 0x10;
const ReturnObject: usize = 0x11;
const Const4: usize = 0x12;
const Const16: usize = 0x13;
const Const: usize = 0x14;
const ConstHigh16: usize = 0x15;
const ConstWide16: usize = 0x16;
const ConstWide32: usize = 0x17;
const ConstWide: usize = 0x18;
const ConstWideHigh16: usize = 0x19;
const ConstString: usize = 0x1a;
const ConstStringJumbo: usize = 0x1b;
const ConstClass: usize = 0x1c;
const MonitorEnter: usize = 0x1d;
const MonitorExit: usize = 0x1e;
const CheckCast: usize = 0x1f;
const InstanceOf: usize = 0x20;
const ArrayLength: usize = 0x21;
const NewInstance: usize = 0x22;
const NewArray: usize = 0x23;
const FilledNewArray: usize = 0x24;
const FilledNewArray_range: usize = 0x25;
const FillArrayData: usize = 0x26;
const Throw: usize = 0x27;
const Goto: usize = 0x28;
const Goto_16: usize = 0x29;
const Goto_32: usize = 0x2a;
const PackedSwitch: usize = 0x2b;
const SparseSwitch: usize = 0x2c;
const CmplFloat: usize = 0x2d;
const CmpgFloat: usize = 0x2e;
const CmplDouble: usize = 0x2f;
const CmpgDouble: usize = 0x30;
const CmpLong: usize = 0x31;
const IfEq: usize = 0x32;
const IfNe: usize = 0x33;
const IfLt: usize = 0x34;
const IfGe: usize = 0x35;
const IfGt: usize = 0x36;
const IfLe: usize = 0x37;
const IfEqz: usize = 0x38;
const IfNez: usize = 0x39;
const IfLtz: usize = 0x3a;
const IfGez: usize = 0x3b;
const IfGtz: usize = 0x3c;
const IfLez: usize = 0x3d;
const Aget: usize = 0x44;
const AgetWide: usize = 0x45;
const AgetObject: usize = 0x46;
const AgetBoolean: usize = 0x47;
const AgetByte: usize = 0x48;
const AgetChar: usize = 0x49;
const AgetShort: usize = 0x4a;
const Aput: usize = 0x4b;
const AputWide: usize = 0x4c;
const AputObject: usize = 0x4d;
const AputBoolean: usize = 0x4e;
const AputByte: usize = 0x4f;
const AputChar: usize = 0x50;
const AputShort: usize = 0x51;
const Iget: usize = 0x52;
const IgetWide: usize = 0x53;
const IgetObject: usize = 0x54;
const IgetBoolean: usize = 0x55;
const IgetByte: usize = 0x56;
const IgetChar: usize = 0x57;
const IgetShort: usize = 0x58;
const Iput: usize = 0x59;
const IputWide: usize = 0x5a;
const IputObject: usize = 0x5b;
const IputBoolean: usize = 0x5c;
const IputByte: usize = 0x5d;
const IputChar: usize = 0x5e;
const IputShort: usize = 0x5f;
const Sget: usize = 0x60;
const SgetWide: usize = 0x61;
const SgetObject: usize = 0x62;
const SgetBoolean: usize = 0x63;
const SgetByte: usize = 0x64;
const SgetChar: usize = 0x65;
const SgetShort: usize = 0x66;
const Sput: usize = 0x67;
const SputWide: usize = 0x68;
const SputObject: usize = 0x69;
const SputBoolean: usize = 0x6a;
const SputByte: usize = 0x6b;
const SputChar: usize = 0x6c;
const SputShort: usize = 0x6d;
const InvokeVirtual: usize = 0x6e;
const InvokeSuper: usize = 0x6f;
const InvokeDirect: usize = 0x70;
const InvokeStatic: usize = 0x71;
const InvokeInterface: usize = 0x72;
const InvokeVirtual_range: usize = 0x74;
const InvokeSuper_range: usize = 0x75;
const InvokeDirect_range: usize = 0x76;
const InvokeStatic_range: usize = 0x77;
const InvokeInterface_range: usize = 0x78;
const NegInt: usize = 0x7b;
const NotInt: usize = 0x7c;
const NegLong: usize = 0x7d;
const NotLong: usize = 0x7e;
const NegFloat: usize = 0x7f;
const NegDouble: usize = 0x80;
const IntToLong: usize = 0x81;
const IntToFloat: usize = 0x82;
const IntToDouble: usize = 0x83;
const LongToInt: usize = 0x84;
const LongToFloat: usize = 0x85;
const LongToDouble: usize = 0x86;
const FloatToInt: usize = 0x87;
const FloatToLong: usize = 0x88;
const FloatToDouble: usize = 0x89;
const DoubleToInt: usize = 0x8a;
const DoubleToLong: usize = 0x8b;
const DoubleToFloat: usize = 0x8c;
const IntToByte: usize = 0x8d;
const IntToChar: usize = 0x8e;
const IntToShort: usize = 0x8f;
const AddInt: usize = 0x90;
const SubInt: usize = 0x91;
const MulInt: usize = 0x92;
const DivInt: usize = 0x93;
const RemInt: usize = 0x94;
const AndInt: usize = 0x95;
const OrInt: usize = 0x96;
const XorInt: usize = 0x97;
const ShlInt: usize = 0x98;
const ShrInt: usize = 0x99;
const UshrInt: usize = 0x9a;
const AddLong: usize = 0x9b;
const SubLong: usize = 0x9c;
const MulLong: usize = 0x9d;
const DivLong: usize = 0x9e;
const RemLong: usize = 0x9f;
const AndLong: usize = 0xa0;
const OrLong: usize = 0xa1;
const XorLong: usize = 0xa2;
const ShlLong: usize = 0xa3;
const ShrLong: usize = 0xa4;
const UshrLong: usize = 0xa5;
const AddFloat: usize = 0xa6;
const SubFloat: usize = 0xa7;
const MulFloat: usize = 0xa8;
const DivFloat: usize = 0xa9;
const RemFloat: usize = 0xaa;
const AddDouble: usize = 0xab;
const SubDouble: usize = 0xac;
const MulDouble: usize = 0xad;
const DivDouble: usize = 0xae;
const RemDouble: usize = 0xaf;
const AddInt_2addr: usize = 0xb0;
const SubInt_2addr: usize = 0xb1;
const MulInt_2addr: usize = 0xb2;
const DivInt_2addr: usize = 0xb3;
const RemInt_2addr: usize = 0xb4;
const AndInt_2addr: usize = 0xb5;
const OrInt_2addr: usize = 0xb6;
const XorInt_2addr: usize = 0xb7;
const ShlInt_2addr: usize = 0xb8;
const ShrInt_2addr: usize = 0xb9;
const UshrInt_2addr: usize = 0xba;
const AddLong_2addr: usize = 0xbb;
const SubLong_2addr: usize = 0xbc;
const MulLong_2addr: usize = 0xbd;
const DivLong_2addr: usize = 0xbe;
const RemLong_2addr: usize = 0xbf;
const AndLong_2addr: usize = 0xc0;
const OrLong_2addr: usize = 0xc1;
const XorLong_2addr: usize = 0xc2;
const ShlLong_2addr: usize = 0xc3;
const ShrLong_2addr: usize = 0xc4;
const UshrLong_2addr: usize = 0xc5;
const AddFloat_2addr: usize = 0xc6;
const SubFloat_2addr: usize = 0xc7;
const MulFloat_2addr: usize = 0xc8;
const DivFloat_2addr: usize = 0xc9;
const RemFloat_2addr: usize = 0xca;
const AddDouble_2addr: usize = 0xcb;
const SubDouble_2addr: usize = 0xcc;
const MulDouble_2addr: usize = 0xcd;
const DivDouble_2addr: usize = 0xce;
const RemDouble_2addr: usize = 0xcf;
const AddInt_lit16: usize = 0xd0;
const RsubInt: usize = 0xd1;
const MulInt_lit16: usize = 0xd2;
const DivInt_lit16: usize = 0xd3;
const RemInt_lit16: usize = 0xd4;
const AndInt_lit16: usize = 0xd5;
const OrInt_lit16: usize = 0xd6;
const XorInt_lit16: usize = 0xd7;
const AddInt_lit8: usize = 0xd8;
const RsubInt_lit8: usize = 0xd9;
const MulInt_lit8: usize = 0xda;
const DivInt_lit8: usize = 0xdb;
const RemInt_lit8: usize = 0xdc;
const AndInt_lit8: usize = 0xdd;
const OrInt_lit8: usize = 0xde;
const XorInt_lit8: usize = 0xdf;
const ShlInt_lit8: usize = 0xe0;
const ShrInt_lit8: usize = 0xe1;
const UshrInt_lit8: usize = 0xe2;
const InvokePolymorphic: usize = 0xfa;
const InvokePolymorphic_range: usize = 0xfb;
const InvokeCustom: usize = 0xfc;
const InvokeCustom_range: usize = 0xfd;
